# ============================================
# CONFIGURACIÓN DE DESARROLLO
# ============================================

# Django Settings
# IMPORTANTE: Genera una SECRET_KEY segura usando:
# python -c "from django.core.management.utils import get_random_secret_key; print(get_random_secret_key())"
SECRET_KEY=django-insecure-CHANGE-THIS-TO-A-RANDOM-50-CHARACTER-STRING

# DEBUG: True para desarrollo, False para producción
DEBUG=True

# ALLOWED_HOSTS: Dominios permitidos (separados por coma)
ALLOWED_HOSTS=localhost,127.0.0.1

# Database (SQLite por defecto para desarrollo)
# Para PostgreSQL en producción:
# DATABASE_URL=postgresql://user:password@localhost:5432/mac_attendance

# CORS Settings (orígenes permitidos para CORS)
CORS_ALLOWED_ORIGINS=http://localhost:5173,http://127.0.0.1:5173

# Rate Limiting (protección contra ataques)
# RATELIMIT_ENABLE=True  # False para desactivar en testing

# ============================================
# CONFIGURACIÓN DE PRODUCCIÓN
# ============================================
# Descomenta y configura estas variables al desplegar en producción

# Security - HTTPS/SSL
# SECURE_SSL_REDIRECT=True              # Redirigir HTTP a HTTPS
# SESSION_COOKIE_SECURE=True            # Cookies solo por HTTPS
# CSRF_COOKIE_SECURE=True               # CSRF cookies solo por HTTPS

# Security - HSTS (HTTP Strict Transport Security)
# SECURE_HSTS_SECONDS=31536000          # 1 año en segundos
# SECURE_HSTS_INCLUDE_SUBDOMAINS=True   # Aplicar a subdominios
# SECURE_HSTS_PRELOAD=True              # Habilitar HSTS preload

# Ejemplo de configuración para producción:
# DEBUG=False
# ALLOWED_HOSTS=tu-dominio.com,www.tu-dominio.com
# CORS_ALLOWED_ORIGINS=https://tu-dominio.com,https://www.tu-dominio.com
# SECURE_SSL_REDIRECT=True
# SESSION_COOKIE_SECURE=True
# CSRF_COOKIE_SECURE=True