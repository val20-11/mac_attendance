# ============================================
# CONFIGURACIÓN DE PRODUCCIÓN
# ============================================
# Copia este archivo como .env en producción y configura los valores apropiados

# Django Settings
# CRÍTICO: Genera una SECRET_KEY única y fuerte usando:
# python -c "from django.core.management.utils import get_random_secret_key; print(get_random_secret_key())"
SECRET_KEY=CHANGE-THIS-TO-A-STRONG-RANDOM-SECRET-KEY

# DEBUG: SIEMPRE False en producción
DEBUG=False

# ALLOWED_HOSTS: Dominios de tu servidor (separados por coma, sin espacios)
# Ejemplo: ALLOWED_HOSTS=miapp.com,www.miapp.com,api.miapp.com
ALLOWED_HOSTS=tu-dominio.com,www.tu-dominio.com

# Database - PostgreSQL recomendado para producción
# Formato: postgresql://usuario:contraseña@host:puerto/nombre_bd
DATABASE_URL=postgresql://user:password@localhost:5432/mac_attendance

# CORS Settings - Solo orígenes HTTPS en producción
# Ejemplo: CORS_ALLOWED_ORIGINS=https://miapp.com,https://www.miapp.com
CORS_ALLOWED_ORIGINS=https://tu-dominio.com,https://www.tu-dominio.com

# Rate Limiting (OBLIGATORIO mantener habilitado en producción)
RATELIMIT_ENABLE=True

# ============================================
# SEGURIDAD - HTTPS/SSL (OBLIGATORIO)
# ============================================

# Redirigir automáticamente HTTP a HTTPS
SECURE_SSL_REDIRECT=True

# Cookies solo por HTTPS (OBLIGATORIO)
SESSION_COOKIE_SECURE=True
CSRF_COOKIE_SECURE=True

# ============================================
# SEGURIDAD - HSTS
# ============================================
# HTTP Strict Transport Security - Forzar HTTPS en el navegador

# Duración en segundos (31536000 = 1 año)
# Empezar con un valor bajo (300) y aumentar gradualmente
SECURE_HSTS_SECONDS=31536000

# Aplicar HSTS a subdominios
SECURE_HSTS_INCLUDE_SUBDOMAINS=True

# Habilitar HSTS preload (solo después de probar)
SECURE_HSTS_PRELOAD=True

# ============================================
# NOTAS IMPORTANTES PARA PRODUCCIÓN
# ============================================
#
# 1. SECRET_KEY debe ser ÚNICA y NUNCA compartirse
# 2. DEBUG=False es OBLIGATORIO en producción
# 3. Usar PostgreSQL en lugar de SQLite
# 4. Configurar servidor web (nginx/apache) con SSL/TLS
# 5. Usar gunicorn o uwsgi como servidor WSGI
# 6. Configurar firewall y restricciones de red
# 7. Implementar backups automáticos de la base de datos
# 8. Monitorear logs regularmente
# 9. Mantener Django y dependencias actualizadas
# 10. No subir el archivo .env al repositorio